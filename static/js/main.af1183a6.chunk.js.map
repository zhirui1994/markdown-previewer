{"version":3,"sources":["App.module.scss","App.js","serviceWorker.js","index.js","test.md"],"names":["module","exports","App","main","marked","setOptions","highlight","code","hljs","highlightAuto","value","handleInput","e","preventDefault","_this","preview","innerHTML","editor","this","editorDefault","_this2","react_default","a","createElement","className","styles","header","spellCheck","ref","textarea","defaultValue","onInput","id","section","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHACAA,EAAAC,QAAA,CAAkBC,IAAA,iBAAAC,KAAA,mOCMlBC,IAAOC,WAAW,CACdC,UAAW,SAACC,GACR,OAAOC,IAAKC,cAAcF,GAAMG,aA4BzBR,6MAvBXS,YAAc,SAACC,GACXA,EAAEC,iBACFC,EAAKC,QAAQC,UAAYZ,IAAOU,EAAKG,OAAOP,2FAI5CQ,KAAKH,QAAQC,UAAYZ,IAAOe,sCAG3B,IAAAC,EAAAF,KACL,OACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvB,KACnBmB,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOC,QAA1B,wCACAL,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOtB,MACpBkB,EAAAC,EAAAC,cAAA,YAAUI,WAAW,QAAQC,IAAK,SAAAC,GAAQ,OAAIT,EAAKH,OAASY,GAAUC,aAAcX,IAAeY,QAASb,KAAKP,YAAaqB,GAAG,WACjIX,EAAAC,EAAAC,cAAA,WAASK,IAAK,SAAAK,GAAO,OAAIb,EAAKL,QAAUkB,GAASD,GAAG,aAExDX,EAAAC,EAAAC,cAAA,8DAlBMW,aCDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECZNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gCEnInBlD,EAAAC,QAAA","file":"static/js/main.af1183a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1uQdc\",\"main\":\"App_main__3qakm\"};","import React, { Component } from 'react';\nimport marked from 'marked';\nimport styles from './App.module.scss';\nimport editorDefault from './test.md';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github-gist.css';\n\nmarked.setOptions({\n    highlight: (code) => {\n        return hljs.highlightAuto(code).value;\n    }\n})\n\nclass App extends Component {\n    handleInput = (e) => {\n        e.preventDefault();\n        this.preview.innerHTML = marked(this.editor.value);\n    }\n\n    componentDidMount() {\n        this.preview.innerHTML = marked(editorDefault);\n    }\n\n    render() {\n        return (\n        <div className={styles.App}>\n            <header className={styles.header}>头部占位内容</header>\n            <main className={styles.main}>\n                <textarea spellCheck=\"false\" ref={textarea => this.editor = textarea} defaultValue={editorDefault} onInput={this.handleInput} id=\"editor\"></textarea>\n                <section ref={section => this.preview = section} id=\"preview\"></section>\n            </main>\n            <footer>脚部占位内容</footer>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = \"# 一级标题\\r\\n## 二级标题\\r\\n### 三级标题\\r\\n#### 四级标题\\r\\n##### 五级标题\\r\\n###### 六级标题\\r\\n\\r\\n## 表格\\r\\n\\r\\na|b|c|d\\r\\n-|-|-|-\\r\\n1|2|3|4\\r\\n5|6|7|8\\r\\n\\r\\n## 代码\\r\\n\\r\\n```javascript\\r\\nvar a = 3;\\r\\nvar b = 5;\\r\\nfunction add(a, b) {\\r\\n    return a+b;\\r\\n}\\r\\n\\r\\nconsole.log(add(a, b)); // 8\\r\\n```\\r\\n\\r\\n## 列表\\r\\n以下：\\r\\n1. fdfsjsald\\r\\n2. fasdlfjafas\\r\\n3. fa'dfjlsf\\r\\n\\r\\n\""],"sourceRoot":""}